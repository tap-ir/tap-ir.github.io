initSidebarItems({"macro":[["config_schema",""],["plugin","Macro to help creation of plugin. "]],"mod":[["attribute","[Attributes] are the base element stored in the Tree by the Plugins . Each [Attribute] contain a `name`, a [Value] and a `description`,  and can be generated statically or dynamically. "],["datetime","Convert a Windows 64bits timestamp to a [DateTime]."],["error","The main error enum used in TAP.  It can handle different type of error."],["event","Events let send and receive data trough channel."],["mappedvfile","[MappedVFileBuilder] is a file system developement helper, you can use it to create a generator of `Reader`. You don’t need to implement [Read] or [Seek] method but just to add different pointer (offset and size) to chunk of data from an existing `Reader` to the container."],["memoryvfile","A [VFileBuilder] that cache in memory the content of an other [VFileBuilder]."],["node","Node is used as a tree item that let you access the static and dynamic attributes added by the plugins."],["plugin","This module contain the different trait that Plugin must implement."],["plugin_dummy","The `dummy plugin` is an exemple of how to write a plugin."],["plugin_dummy_singleton","The `dummy singleton plugin` is an exemple of how to write a singleton/static plugin. This plugin instantiate method will always return the same object."],["plugins_db","[PluginsDB] is the database containing all the registred plugins  it provides you with helper function to manipulate plugins. "],["reflect","A reflection trait for Rust struct, that permit to access struct member as [Attribute]. [ReflectStruct] can be used with tap_derive macro to automatically generate [Attribute] from Struct."],["session","Session is the main component of this library. it give you access to all the functionality of the library (plugins, taskmanager, the attributes and data tree, …). "],["task_scheduler","The scheduler is in charge of runing tasks (plugin instancce and argument) in differents workers."],["tree","The tree let you access all the node and their attributes created by the different plugins,  in an uniform and reflective ways."],["value","Value is a variant type container used to store different kind of data inside an `Attribute`."],["vfile","VFileBuilder is a trait that help build new ‘Virtual File’. It’s implemented as a trait with an open function returning a VFile (Read+Seek)  this can be added as Value to the tree and so permit to create a stacked VFS  as node can read on a VFile and generate a new one"],["zerovfile",""]]});